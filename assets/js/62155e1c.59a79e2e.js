"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[38011],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>y});var a=n(96540);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),g=s(n),u=l,y=g["".concat(p,".").concat(u)]||g[u]||m[u]||r;return n?a.createElement(y,i(i({ref:t},d),{},{components:n})):a.createElement(y,i({ref:t},d))}));function y(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[g]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},95657:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(58168),l=(n(96540),n(15680));const r={},i="Hudi",o={unversionedId:"connector-v2/sink/Hudi",id:"version-2.3.9/connector-v2/sink/Hudi",title:"Hudi",description:"Hudi sink connector",source:"@site/versioned_docs/version-2.3.9/connector-v2/sink/Hudi.md",sourceDirName:"connector-v2/sink",slug:"/connector-v2/sink/Hudi",permalink:"/docs/2.3.9/connector-v2/sink/Hudi",draft:!1,editUrl:"https://github.com/apache/seatunnel-website/edit/main/versioned_docs/version-2.3.9/connector-v2/sink/Hudi.md",tags:[],version:"2.3.9",frontMatter:{},sidebar:"docs",previous:{title:"Http",permalink:"/docs/2.3.9/connector-v2/sink/Http"},next:{title:"Apache Iceberg",permalink:"/docs/2.3.9/connector-v2/sink/Iceberg"}},p={},s=[{value:"Description",id:"description",level:2},{value:"Key features",id:"key-features",level:2},{value:"Options",id:"options",level:2},{value:"table_name string",id:"table_name-string",level:3},{value:"database string",id:"database-string",level:3},{value:"table_dfs_path string",id:"table_dfs_path-string",level:3},{value:"table_type enum",id:"table_type-enum",level:3},{value:"record_key_fields string",id:"record_key_fields-string",level:3},{value:"partition_fields string",id:"partition_fields-string",level:3},{value:"index_type string",id:"index_type-string",level:3},{value:"index_class_name string",id:"index_class_name-string",level:3},{value:"record_byte_size Int",id:"record_byte_size-int",level:3},{value:"conf_files_path string",id:"conf_files_path-string",level:3},{value:"op_type enum",id:"op_type-enum",level:3},{value:"batch_interval_ms Int",id:"batch_interval_ms-int",level:3},{value:"batch_size Int",id:"batch_size-int",level:3},{value:"insert_shuffle_parallelism Int",id:"insert_shuffle_parallelism-int",level:3},{value:"upsert_shuffle_parallelism Int",id:"upsert_shuffle_parallelism-int",level:3},{value:"min_commits_to_keep Int",id:"min_commits_to_keep-int",level:3},{value:"max_commits_to_keep Int",id:"max_commits_to_keep-int",level:3},{value:"cdc_enabled boolean",id:"cdc_enabled-boolean",level:3},{value:"schema_save_mode Enum",id:"schema_save_mode-enum",level:3},{value:"common options",id:"common-options",level:3},{value:"Examples",id:"examples",level:2},{value:"single table",id:"single-table",level:3},{value:"Multiple table",id:"multiple-table",level:3},{value:"Changelog",id:"changelog",level:2},{value:"2.2.0-beta 2022-09-26",id:"220-beta-2022-09-26",level:3}],d={toc:s},g="wrapper";function m(e){let{components:t,...n}=e;return(0,l.yg)(g,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"hudi"},"Hudi"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Hudi sink connector")),(0,l.yg)("h2",{id:"description"},"Description"),(0,l.yg)("p",null,"Used to write data to Hudi."),(0,l.yg)("h2",{id:"key-features"},"Key features"),(0,l.yg)("ul",{className:"contains-task-list"},(0,l.yg)("li",{parentName:"ul",className:"task-list-item"},(0,l.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,l.yg)("a",{parentName:"li",href:"/docs/2.3.9/concept/connector-v2-features"},"exactly-once")),(0,l.yg)("li",{parentName:"ul",className:"task-list-item"},(0,l.yg)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,l.yg)("a",{parentName:"li",href:"/docs/2.3.9/concept/connector-v2-features"},"cdc")),(0,l.yg)("li",{parentName:"ul",className:"task-list-item"},(0,l.yg)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,l.yg)("a",{parentName:"li",href:"/docs/2.3.9/concept/connector-v2-features"},"support multiple table write"))),(0,l.yg)("h2",{id:"options"},"Options"),(0,l.yg)("p",null,"Base configuration:"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"name"),(0,l.yg)("th",{parentName:"tr",align:null},"type"),(0,l.yg)("th",{parentName:"tr",align:null},"required"),(0,l.yg)("th",{parentName:"tr",align:null},"default value"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"table_dfs_path"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"conf_files_path"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"table_list"),(0,l.yg)("td",{parentName:"tr",align:null},"Array"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"schema_save_mode"),(0,l.yg)("td",{parentName:"tr",align:null},"enum"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"CREATE_SCHEMA_WHEN_NOT_EXIST")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"common-options"),(0,l.yg)("td",{parentName:"tr",align:null},"Config"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"-")))),(0,l.yg)("p",null,"Table list configuration:"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"name"),(0,l.yg)("th",{parentName:"tr",align:null},"type"),(0,l.yg)("th",{parentName:"tr",align:null},"required"),(0,l.yg)("th",{parentName:"tr",align:null},"default value"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"table_name"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"database"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"default")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"table_type"),(0,l.yg)("td",{parentName:"tr",align:null},"enum"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"COPY_ON_WRITE")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"op_type"),(0,l.yg)("td",{parentName:"tr",align:null},"enum"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"insert")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"record_key_fields"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"partition_fields"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"batch_interval_ms"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"1000")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"batch_size"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"1000")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"insert_shuffle_parallelism"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"2")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"upsert_shuffle_parallelism"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"2")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"min_commits_to_keep"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"20")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"max_commits_to_keep"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"30")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"index_type"),(0,l.yg)("td",{parentName:"tr",align:null},"enum"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"BLOOM")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"index_class_name"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"-")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"record_byte_size"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"1024")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"cdc_enabled"),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},"false")))),(0,l.yg)("p",null,"Note: When this configuration corresponds to a single table, you can flatten the configuration items in table_list to the outer layer."),(0,l.yg)("h3",{id:"table_name-string"},"table_name ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"table_name")," The name of hudi table."),(0,l.yg)("h3",{id:"database-string"},"database ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"database")," The database of hudi table."),(0,l.yg)("h3",{id:"table_dfs_path-string"},"table_dfs_path ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"table_dfs_path")," The dfs root path of hudi table, such as 'hdfs://nameserivce/data/hudi/'."),(0,l.yg)("h3",{id:"table_type-enum"},"table_type ","[enum]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"table_type")," The type of hudi table. The value is ",(0,l.yg)("inlineCode",{parentName:"p"},"COPY_ON_WRITE")," or ",(0,l.yg)("inlineCode",{parentName:"p"},"MERGE_ON_READ"),"."),(0,l.yg)("h3",{id:"record_key_fields-string"},"record_key_fields ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"record_key_fields")," The record key fields of hudi table, its are used to generate record key. It must be configured when op_type is ",(0,l.yg)("inlineCode",{parentName:"p"},"UPSERT"),"."),(0,l.yg)("h3",{id:"partition_fields-string"},"partition_fields ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"partition_fields")," The partition key fields of hudi table, its are used to generate partition."),(0,l.yg)("h3",{id:"index_type-string"},"index_type ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"index_type")," The index type of hudi table. Currently, ",(0,l.yg)("inlineCode",{parentName:"p"},"BLOOM"),", ",(0,l.yg)("inlineCode",{parentName:"p"},"SIMPLE"),", and ",(0,l.yg)("inlineCode",{parentName:"p"},"GLOBAL SIMPLE")," are supported."),(0,l.yg)("h3",{id:"index_class_name-string"},"index_class_name ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"index_class_name")," The customized index classpath of hudi table, example ",(0,l.yg)("inlineCode",{parentName:"p"},"org.apache.seatunnel.connectors.seatunnel.hudi.index.CustomHudiIndex"),"."),(0,l.yg)("h3",{id:"record_byte_size-int"},"record_byte_size ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"record_byte_size")," The byte size of each record, This value can be used to help calculate the approximate number of records in each hudi data file. Adjusting this value can effectively reduce the number of hudi data file write magnifications."),(0,l.yg)("h3",{id:"conf_files_path-string"},"conf_files_path ","[string]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"conf_files_path")," The environment conf file path list(local path), which used to init hdfs client to read hudi table file. The example is '/home/test/hdfs-site.xml;/home/test/core-site.xml;/home/test/yarn-site.xml'."),(0,l.yg)("h3",{id:"op_type-enum"},"op_type ","[enum]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"op_type")," The operation type of hudi table. The value is ",(0,l.yg)("inlineCode",{parentName:"p"},"insert")," or ",(0,l.yg)("inlineCode",{parentName:"p"},"upsert")," or ",(0,l.yg)("inlineCode",{parentName:"p"},"bulk_insert"),"."),(0,l.yg)("h3",{id:"batch_interval_ms-int"},"batch_interval_ms ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"batch_interval_ms")," The interval time of batch write to hudi table."),(0,l.yg)("h3",{id:"batch_size-int"},"batch_size ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"batch_size")," The size of batch write to hudi table."),(0,l.yg)("h3",{id:"insert_shuffle_parallelism-int"},"insert_shuffle_parallelism ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"insert_shuffle_parallelism")," The parallelism of insert data to hudi table."),(0,l.yg)("h3",{id:"upsert_shuffle_parallelism-int"},"upsert_shuffle_parallelism ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"upsert_shuffle_parallelism")," The parallelism of upsert data to hudi table."),(0,l.yg)("h3",{id:"min_commits_to_keep-int"},"min_commits_to_keep ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"min_commits_to_keep")," The min commits to keep of hudi table."),(0,l.yg)("h3",{id:"max_commits_to_keep-int"},"max_commits_to_keep ","[Int]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"max_commits_to_keep")," The max commits to keep of hudi table."),(0,l.yg)("h3",{id:"cdc_enabled-boolean"},"cdc_enabled ","[boolean]"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"cdc_enabled")," Whether to persist the CDC change log. When enable, persist the change data if necessary, and the table can be queried as a CDC query mode."),(0,l.yg)("h3",{id:"schema_save_mode-enum"},"schema_save_mode ","[Enum]"),(0,l.yg)("p",null,"Before the synchronous task is turned on, different treatment schemes are selected for the existing surface structure of the target side.",(0,l.yg)("br",{parentName:"p"}),"\n","Option introduction\uff1a",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("inlineCode",{parentName:"p"},"RECREATE_SCHEMA")," \uff1aWill create when the table does not exist, delete and rebuild when the table is saved",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("inlineCode",{parentName:"p"},"CREATE_SCHEMA_WHEN_NOT_EXIST")," \uff1aWill Created when the table does not exist, skipped when the table is saved",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("inlineCode",{parentName:"p"},"ERROR_WHEN_SCHEMA_NOT_EXIST")," \uff1aError will be reported when the table does not exist",(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("inlineCode",{parentName:"p"},"IGNORE")," \uff1aIgnore the treatment of the table"),(0,l.yg)("h3",{id:"common-options"},"common options"),(0,l.yg)("p",null,"Source plugin common parameters, please refer to ",(0,l.yg)("a",{parentName:"p",href:"/docs/2.3.9/connector-v2/sink-common-options"},"Source Common Options")," for details."),(0,l.yg)("h2",{id:"examples"},"Examples"),(0,l.yg)("h3",{id:"single-table"},"single table"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-hocon"},'sink {\n  Hudi {\n    table_dfs_path = "hdfs://nameserivce/data/"\n    database = "st"\n    table_name = "test_table"\n    table_type = "COPY_ON_WRITE"\n    conf_files_path = "/home/test/hdfs-site.xml;/home/test/core-site.xml;/home/test/yarn-site.xml"\n    batch_size = 10000\n    use.kerberos = true\n    kerberos.principal = "test_user@xxx"\n    kerberos.principal.file = "/home/test/test_user.keytab"\n  }\n}\n')),(0,l.yg)("h3",{id:"multiple-table"},"Multiple table"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-hocon"},'env {\n  parallelism = 1\n  job.mode = "STREAMING"\n  checkpoint.interval = 5000\n}\n\nsource {\n  Mysql-CDC {\n    base-url = "jdbc:mysql://127.0.0.1:3306/seatunnel"\n    username = "root"\n    password = "******"\n    \n    table-names = ["seatunnel.role","seatunnel.user","galileo.Bucket"]\n  }\n}\n\ntransform {\n}\n\nsink {\n  Hudi {\n    table_dfs_path = "hdfs://nameserivce/data/"\n    conf_files_path = "/home/test/hdfs-site.xml;/home/test/core-site.xml;/home/test/yarn-site.xml"\n    table_list = [\n      {\n        database = "st1"\n        table_name = "role"\n        table_type = "COPY_ON_WRITE"\n        op_type="INSERT"\n        batch_size = 10000\n      },\n      {\n        database = "st1"\n        table_name = "user"\n        table_type = "COPY_ON_WRITE"\n        op_type="UPSERT"\n        # op_type is \'UPSERT\', must configured record_key_fields\n        record_key_fields = "user_id"\n        batch_size = 10000\n      },\n      {\n        database = "st1"\n        table_name = "Bucket"\n        table_type = "MERGE_ON_READ"\n      }\n    ]\n    ...\n  }\n}\n')),(0,l.yg)("h2",{id:"changelog"},"Changelog"),(0,l.yg)("h3",{id:"220-beta-2022-09-26"},"2.2.0-beta 2022-09-26"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Add Hudi Source Connector")))}m.isMDXComponent=!0}}]);