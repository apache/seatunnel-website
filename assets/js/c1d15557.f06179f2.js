"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[31368],{15680:(e,t,n)=>{n.d(t,{xA:()=>y,yg:()=>c});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},y=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,c=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return n?a.createElement(c,l(l({ref:t},y),{},{components:n})):a.createElement(c,l({ref:t},y))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},73452:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(58168),r=(n(96540),n(15680));const i={},l="Security",o={unversionedId:"seatunnel-engine/security",id:"version-2.3.11/seatunnel-engine/security",title:"Security",description:"Basic Authentication",source:"@site/versioned_docs/version-2.3.11/seatunnel-engine/security.md",sourceDirName:"seatunnel-engine",slug:"/seatunnel-engine/security",permalink:"/docs/2.3.11/seatunnel-engine/security",draft:!1,editUrl:"https://github.com/apache/seatunnel-website/edit/main/versioned_docs/version-2.3.11/seatunnel-engine/security.md",tags:[],version:"2.3.11",frontMatter:{},sidebar:"docs",previous:{title:"RESTful API V2",permalink:"/docs/2.3.11/seatunnel-engine/rest-api-v2"},next:{title:"Command Line Tool",permalink:"/docs/2.3.11/seatunnel-engine/user-command"}},s={},p=[{value:"Basic Authentication",id:"basic-authentication",level:2},{value:"HTTPS Configuration",id:"https-configuration",level:2},{value:"Example of Generating Keys",id:"example-of-generating-keys",level:3}],y={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"security"},"Security"),(0,r.yg)("h2",{id:"basic-authentication"},"Basic Authentication"),(0,r.yg)("p",null,"You can secure your Web UI by enabling basic authentication. This will require users to enter a username and password when accessing the web interface."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Required"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"enable-basic-auth")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Whether to enable basic authentication, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"false"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"basic-auth-username")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"The username for basic authentication, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"admin"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"basic-auth-password")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"The password for basic authentication, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"admin"))))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'seatunnel:\n  engine:\n    http:\n      enable-http: true\n      port: 8080\n      enable-basic-auth: true\n      basic-auth-username: "your_username"\n      basic-auth-password: "your_password"\n')),(0,r.yg)("h2",{id:"https-configuration"},"HTTPS Configuration"),(0,r.yg)("p",null,"You can secure your REST-API-V2 service by enabling HTTPS. Both HTTP and HTTPS can be enabled simultaneously, or only one of them can be enabled."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Required"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"enable-http")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Whether to enable HTTP service, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"true"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"port")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"HTTP service port, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"8080"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"enable-https")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Whether to enable HTTPS service, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"false"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"https-port")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"HTTPS service port, default is ",(0,r.yg)("inlineCode",{parentName:"td"},"8443"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"key-store-path")),(0,r.yg)("td",{parentName:"tr",align:null},"Required when ",(0,r.yg)("inlineCode",{parentName:"td"},"enable-https")," is ",(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Path to the KeyStore file, used to store the server's private key and certificate")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"key-store-password")),(0,r.yg)("td",{parentName:"tr",align:null},"Required when ",(0,r.yg)("inlineCode",{parentName:"td"},"enable-https")," is ",(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"KeyStore password")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"key-manager-password")),(0,r.yg)("td",{parentName:"tr",align:null},"Required when ",(0,r.yg)("inlineCode",{parentName:"td"},"enable-https")," is ",(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"KeyManager password, usually the same as the KeyStore password")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"trust-store-path")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Path to the TrustStore file, used to verify client certificates")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"trust-store-password")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"TrustStore password")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note"),": When ",(0,r.yg)("inlineCode",{parentName:"p"},"trust-store-path")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"trust-store-password")," are not empty, mutual SSL authentication (client authentication) will be enabled, requiring the client to provide a valid certificate."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'seatunnel:\n  engine:\n    http:\n      enable-http: true\n      port: 8080\n      enable-https: true\n      https-port: 8443\n      key-store-path: "${YOUR_KEY_STORE_PATH}"\n      key-store-password: "${YOUR_KEY_STORE_PASSWORD}"\n      key-manager-password: "${YOUR_KEY_MANAGER_PASSWORD}"\n      # Optional: Mutual authentication\n      trust-store-path: "${YOUR_TRUST_STORE_PATH}"\n      trust-store-password: "${YOUR_TRUST_STORE_PASSWORD}"\n')),(0,r.yg)("h3",{id:"example-of-generating-keys"},"Example of Generating Keys"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},'#!/bin/bash\n\n# Define the project root directory\nPROJECT_DIR="/Users/mac/IdeaProjects/data"\n\n# Define passwords\nSERVER_KEYSTORE_PASSWORD="server_keystore_password"\nSERVER_KEY_PASSWORD="server_keystore_password"\nCLIENT_KEYSTORE_PASSWORD="client_keystore_password"\nCLIENT_KEY_PASSWORD="client_keystore_password"\nSERVER_TRUSTSTORE_PASSWORD="server_truststore_password"\nCLIENT_TRUSTSTORE_PASSWORD="client_truststore_password"\n\n# Generate server keystore\nkeytool -genkeypair \\\n  -alias server \\\n  -keyalg RSA \\\n  -keysize 2048 \\\n  -validity 365 \\\n  -keystore "$PROJECT_DIR/server_keystore.jks" \\\n  -storepass "$SERVER_KEYSTORE_PASSWORD" \\\n  -keypass "$SERVER_KEY_PASSWORD" \\\n  -dname "CN=localhost,OU=IT,O=MyCompany,L=Shanghai,ST=Shanghai,C=CN"\n\n# Export server certificate\nkeytool -exportcert \\\n  -alias server \\\n  -keystore "$PROJECT_DIR/server_keystore.jks" \\\n  -storepass "$SERVER_KEYSTORE_PASSWORD" \\\n  -file "$PROJECT_DIR/server.crt"\n\n# Generate client keystore\nkeytool -genkeypair \\\n  -alias client \\\n  -keyalg RSA \\\n  -keysize 2048 \\\n  -validity 365 \\\n  -keystore "$PROJECT_DIR/client_keystore.jks" \\\n  -storepass "$CLIENT_KEYSTORE_PASSWORD" \\\n  -keypass "$CLIENT_KEY_PASSWORD" \\\n  -dname "CN=client,OU=IT,O=MyCompany,L=Shanghai,ST=Shanghai,C=CN"\n\n# Export client certificate\nkeytool -exportcert \\\n  -alias client \\\n  -keystore "$PROJECT_DIR/client_keystore.jks" \\\n  -storepass "$CLIENT_KEYSTORE_PASSWORD" \\\n  -file "$PROJECT_DIR/client.crt"\n\n# Create server truststore and import client certificate\nkeytool -importcert \\\n  -alias client \\\n  -file "$PROJECT_DIR/client.crt" \\\n  -keystore "$PROJECT_DIR/server_truststore.jks" \\\n  -storepass "$SERVER_TRUSTSTORE_PASSWORD" \\\n  -noprompt\n\n# Create client truststore and import server certificate\nkeytool -importcert \\\n  -alias server \\\n  -file "$PROJECT_DIR/server.crt" \\\n  -keystore "$PROJECT_DIR/client_truststore.jks" \\\n  -storepass "$CLIENT_TRUSTSTORE_PASSWORD" \\\n  -noprompt\n')))}d.isMDXComponent=!0}}]);