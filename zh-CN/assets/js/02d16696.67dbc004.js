"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[14873,96686],{15680:(t,e,n)=>{n.d(e,{xA:()=>u,yg:()=>d});var a=n(96540);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var g=a.createContext({}),p=function(t){var e=a.useContext(g),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(g.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},y=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,g=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=p(n),y=l,d=m["".concat(g,".").concat(y)]||m[y]||c[y]||r;return n?a.createElement(d,i(i({ref:e},u),{},{components:n})):a.createElement(d,i({ref:e},u))}));function d(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=y;var o={};for(var g in e)hasOwnProperty.call(e,g)&&(o[g]=e[g]);o.originalType=t,o[m]="string"==typeof t?t:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},11464:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>g,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(58168),l=(n(96540),n(15680));const r={},i=void 0,o={unversionedId:"connector-v2/changelog/connector-graphql",id:"connector-v2/changelog/connector-graphql",title:"connector-graphql",description:"Change Log",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/connector-v2/changelog/connector-graphql.md",sourceDirName:"connector-v2/changelog",slug:"/connector-v2/changelog/connector-graphql",permalink:"/zh-CN/docs/connector-v2/changelog/connector-graphql",draft:!1,editUrl:"https://github.com/apache/seatunnel-website/edit/main/i18n/zh-CN/docusaurus-plugin-content-docs/current/connector-v2/changelog/connector-graphql.md",tags:[],version:"current",frontMatter:{}},g={},p=[],u={toc:p},m="wrapper";function c(t){let{components:e,...n}=t;return(0,l.yg)(m,(0,a.A)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.yg)("details",null,(0,l.yg)("summary",null," Change Log "),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Change"),(0,l.yg)("th",{parentName:"tr",align:null},"Commit"),(0,l.yg)("th",{parentName:"tr",align:null},"Version"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"[Feature][connector-http]"," Parameters support placeholder replacement (#9184)"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("a",{parentName:"td",href:"https://github.com/apache/seatunnel/commit/8617014edc"},"https://github.com/apache/seatunnel/commit/8617014edc")),(0,l.yg)("td",{parentName:"tr",align:null},"2.3.11")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"[Feature][Connector-V2]"," Support GraphQL Connector (#8557) (#9021)"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("a",{parentName:"td",href:"https://github.com/apache/seatunnel/commit/9eec2520c0"},"https://github.com/apache/seatunnel/commit/9eec2520c0")),(0,l.yg)("td",{parentName:"tr",align:null},"2.3.11"))))))}c.isMDXComponent=!0},78605:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>g,toc:()=>u});var a=n(58168),l=(n(96540),n(15680)),r=n(11464);const i={},o="GraphQL",g={unversionedId:"connector-v2/sink/GraphQL",id:"connector-v2/sink/GraphQL",title:"GraphQL",description:"GraphQL sink \u8fde\u63a5\u5668",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/connector-v2/sink/GraphQL.md",sourceDirName:"connector-v2/sink",slug:"/connector-v2/sink/GraphQL",permalink:"/zh-CN/docs/connector-v2/sink/GraphQL",draft:!1,editUrl:"https://github.com/apache/seatunnel-website/edit/main/i18n/zh-CN/docusaurus-plugin-content-docs/current/connector-v2/sink/GraphQL.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"GoogleFirestore",permalink:"/zh-CN/docs/connector-v2/sink/GoogleFirestore"},next:{title:"Greenplum",permalink:"/zh-CN/docs/connector-v2/sink/Greenplum"}},p={},u=[{value:"\u652f\u6301\u7684\u5f15\u64ce",id:"\u652f\u6301\u7684\u5f15\u64ce",level:2},{value:"\u4e3b\u8981\u7279\u6027",id:"\u4e3b\u8981\u7279\u6027",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:2},{value:"\u652f\u6301\u7684\u6570\u636e\u6e90\u4fe1\u606f",id:"\u652f\u6301\u7684\u6570\u636e\u6e90\u4fe1\u606f",level:2},{value:"\u63a5\u6536\u5668\u9009\u9879",id:"\u63a5\u6536\u5668\u9009\u9879",level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2},{value:"\u53d8\u66f4\u65e5\u5fd7",id:"\u53d8\u66f4\u65e5\u5fd7",level:2}],m={toc:u},c="wrapper";function y(t){let{components:e,...n}=t;return(0,l.yg)(c,(0,a.A)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"graphql"},"GraphQL"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"GraphQL sink \u8fde\u63a5\u5668")),(0,l.yg)("h2",{id:"\u652f\u6301\u7684\u5f15\u64ce"},"\u652f\u6301\u7684\u5f15\u64ce"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Spark",(0,l.yg)("br",null),"\nFlink",(0,l.yg)("br",null),"\nSeaTunnel Zeta",(0,l.yg)("br",null))),(0,l.yg)("h2",{id:"\u4e3b\u8981\u7279\u6027"},"\u4e3b\u8981\u7279\u6027"),(0,l.yg)("ul",{className:"contains-task-list"},(0,l.yg)("li",{parentName:"ul",className:"task-list-item"},(0,l.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,l.yg)("a",{parentName:"li",href:"/zh-CN/docs/concept/connector-v2-features"},"[\u7cbe\u786e\u4e00\u6b21]")),(0,l.yg)("li",{parentName:"ul",className:"task-list-item"},(0,l.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ",(0,l.yg)("a",{parentName:"li",href:"/zh-CN/docs/concept/connector-v2-features"},"\u53d8\u66f4\u6570\u636e\u6355\u83b7")),(0,l.yg)("li",{parentName:"ul",className:"task-list-item"},(0,l.yg)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ",(0,l.yg)("a",{parentName:"li",href:"/zh-CN/docs/concept/connector-v2-features"},"\u652f\u6301\u591a\u8868\u5199\u5165"))),(0,l.yg)("h2",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,l.yg)("p",null,"\u63a5\u6536Source\u7aef\u4f20\u5165\u7684\u6570\u636e\uff0c\u5229\u7528\u6570\u636e\u89e6\u53d1 web hooks\u3002"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"\u4f8b\u5982\uff0c\u6765\u81ea\u4e0a\u6e38\u7684\u6570\u636e\u4e3a ","[",(0,l.yg)("inlineCode",{parentName:"p"},'label: {"__name__": "test1"}, value: 1.2.3,time:2024-08-15T17:00:00'),"]",", \u5219body\u5185\u5bb9\u5982\u4e0b: ",(0,l.yg)("inlineCode",{parentName:"p"},'{"label":{"__name__": "test1"}, "value":"1.23","time":"2024-08-15T17:00:00"}'))),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Tips: GraphQL \u6570\u636e\u63a5\u6536\u5668 \u4ec5\u652f\u6301 ",(0,l.yg)("inlineCode",{parentName:"strong"},"post json")," \u7c7b\u578b\u7684 web hook\uff0csource \u6570\u636e\u5c06\u88ab\u89c6\u4e3a webhook \u4e2d\u7684 body \u5185\u5bb9\u3002\u5e76\u4e14\u4e0d\u652f\u6301\u4f20\u9012\u8fc7\u53bb\u592a\u4e45\u7684\u6570\u636e")),(0,l.yg)("h2",{id:"\u652f\u6301\u7684\u6570\u636e\u6e90\u4fe1\u606f"},"\u652f\u6301\u7684\u6570\u636e\u6e90\u4fe1\u606f"),(0,l.yg)("p",null,"\u60f3\u4f7f\u7528 Prometheus \u8fde\u63a5\u5668\uff0c\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5fc5\u8981\u7684\u4f9d\u8d56\u3002\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c install-plugin.sh \u811a\u672c\u6216\u8005\u4ece Maven \u4e2d\u592e\u4ed3\u5e93\u4e0b\u8f7d\u8fd9\u4e9b\u4f9d\u8d56"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"\u6570\u636e\u6e90"),(0,l.yg)("th",{parentName:"tr",align:null},"\u652f\u6301\u7248\u672c"),(0,l.yg)("th",{parentName:"tr",align:null},"\u4f9d\u8d56"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Http"),(0,l.yg)("td",{parentName:"tr",align:null},"universal"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("a",{parentName:"td",href:"https://mvnrepository.com/artifact/org.apache.seatunnel/seatunnel-connectors-v2/connector-prometheus"},"Download"))))),(0,l.yg)("h2",{id:"\u63a5\u6536\u5668\u9009\u9879"},"\u63a5\u6536\u5668\u9009\u9879"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Name"),(0,l.yg)("th",{parentName:"tr",align:null},"Type"),(0,l.yg)("th",{parentName:"tr",align:null},"Required"),(0,l.yg)("th",{parentName:"tr",align:null},"Default"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"url"),(0,l.yg)("td",{parentName:"tr",align:null},"String"),(0,l.yg)("td",{parentName:"tr",align:null},"Yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"Http request url")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"query"),(0,l.yg)("td",{parentName:"tr",align:null},"String"),(0,l.yg)("td",{parentName:"tr",align:null},"Yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"GraphQL query")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"variables"),(0,l.yg)("td",{parentName:"tr",align:null},"String"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"GraphQL variables")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"valueCover"),(0,l.yg)("td",{parentName:"tr",align:null},"Boolean"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"Whether the data overwrites the variable value")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"headers"),(0,l.yg)("td",{parentName:"tr",align:null},"Map"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"Http headers")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"retry"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"The max retry times if request http return to ",(0,l.yg)("inlineCode",{parentName:"td"},"IOException"))),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"retry_backoff_multiplier_ms"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"100"),(0,l.yg)("td",{parentName:"tr",align:null},"The retry-backoff times(millis) multiplier if request http failed")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"retry_backoff_max_ms"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"10000"),(0,l.yg)("td",{parentName:"tr",align:null},"The maximum retry-backoff times(millis) if request http failed")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"connect_timeout_ms"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"12000"),(0,l.yg)("td",{parentName:"tr",align:null},"Connection timeout setting, default 12s.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"socket_timeout_ms"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"60000"),(0,l.yg)("td",{parentName:"tr",align:null},"Socket timeout setting, default 60s.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"key_timestamp"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"NO"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"prometheus timestamp  key .")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"key_label"),(0,l.yg)("td",{parentName:"tr",align:null},"String"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"prometheus label key")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"key_value"),(0,l.yg)("td",{parentName:"tr",align:null},"Double"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"prometheus value")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"batch_size"),(0,l.yg)("td",{parentName:"tr",align:null},"Int"),(0,l.yg)("td",{parentName:"tr",align:null},"false"),(0,l.yg)("td",{parentName:"tr",align:null},"1024"),(0,l.yg)("td",{parentName:"tr",align:null},"prometheus batch size write")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"flush_interval"),(0,l.yg)("td",{parentName:"tr",align:null},"Long"),(0,l.yg)("td",{parentName:"tr",align:null},"false"),(0,l.yg)("td",{parentName:"tr",align:null},"300000L"),(0,l.yg)("td",{parentName:"tr",align:null},"prometheus flush commit interval")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"common-options"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"No"),(0,l.yg)("td",{parentName:"tr",align:null},"-"),(0,l.yg)("td",{parentName:"tr",align:null},"Sink plugin common parameters, please refer to ",(0,l.yg)("a",{parentName:"td",href:"/zh-CN/docs/connector-v2/sink-common-options"},"Sink Common Options")," for details")))),(0,l.yg)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.yg)("p",null,"\u7b80\u5355\u793a\u4f8b:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-hocon"},'env {\n  parallelism = 1\n  job.mode = "BATCH"\n}\n\nsource {\n  FakeSource {\n    tables_configs = [\n       {\n        schema = {\n          table = "graphql_sink_1"\n         fields {\n                id = int\n                val_bool = boolean\n                val_int8 = tinyint\n                val_int16 = smallint\n                val_int32 = int\n                val_int64 = bigint\n                val_float = float\n                val_double = double\n                val_decimal = "decimal(16, 1)"\n                val_string = string\n                val_unixtime_micros = timestamp\n      }\n        }\n            rows = [\n              {\n                kind = INSERT\n                fields = [1, true, 1, 2, 3, 4, 4.3,5.3,6.3, "NEW", "2020-02-02T02:02:02"]\n              }\n              ]\n       },\n       {\n       schema = {\n         table = "graphql_sink_2"\n              fields {\n                        id = int\n                        val_bool = boolean\n                        val_int8 = tinyint\n                        val_int16 = smallint\n                        val_int32 = int\n                        val_int64 = bigint\n                        val_float = float\n                        val_double = double\n                        val_decimal = "decimal(16, 1)"\n                        val_string = string\n                        val_unixtime_micros = timestamp\n              }\n       }\n           rows = [\n             {\n               kind = INSERT\n               fields = [2, true, 1, 2, 3, 4, 4.3,5.3,6.3, "NEW", "2020-02-02T02:02:02"]\n             }\n             ]\n      }\n    ]\n  }\n}\n\nsink {\n   GraphQL {\n        url = "http://192.168.1.103:9081/v1/graphql"\n        query = """\n         mutation MyMutation(\n           $id: Int!\n           $val_bool: Boolean!\n           $val_int8: smallint!\n           $val_int16: smallint!\n           $val_int32: Int!\n           $val_int64: bigint!\n           $val_float: Float!\n           $val_double: Float!\n           $val_decimal: numeric!\n           $val_string: String!\n           $val_unixtime_micros: timestamp!\n         ) {\n           insert_sink(objects: {\n             id: $id,\n             val_bool: $val_bool,\n             val_int8: $val_int8,\n             val_int16: $val_int16,\n             val_int32: $val_int32,\n             val_int64: $val_int64,\n             val_float: $val_float,\n             val_double: $val_double,\n             val_decimal: $val_decimal,\n             val_string: $val_string,\n             val_unixtime_micros: $val_unixtime_micros\n           }) {\n             affected_rows\n             returning {\n               id\n               val_bool\n               val_decimal\n               val_double\n               val_float\n               val_int16\n               val_int32\n               val_int64\n               val_int8\n               val_string\n               val_unixtime_micros\n             }\n           }\n         }\n        """\n        variables = {\n            "val_bool": True\n        }\n    }\n}\n\n')),(0,l.yg)("h2",{id:"\u53d8\u66f4\u65e5\u5fd7"},"\u53d8\u66f4\u65e5\u5fd7"),(0,l.yg)(r.default,{mdxType:"ChangeLog"}))}y.isMDXComponent=!0}}]);